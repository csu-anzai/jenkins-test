node { lock('master') {

  BRANCH_TO_BUILD = "master"
  WORKSPACE = sh(returnStdout: true, script: 'pwd').trim()
  BRANCH_DIR = "master"

  echo "===== after setting branch dir"
  sh 'pwd; ls -al'

  WORKSPACE_DIR = "${WORKSPACE}/${BRANCH_DIR}"
  echo " --- branch to build: ${BRANCH_TO_BUILD}"
  echo " --- workspace_dir: ${WORKSPACE_DIR}"

  stage('build') {
    dir(WORKSPACE_DIR) {
      deleteDir()
    }

    dir(WORKSPACE_DIR) {

      // TODO: release notes from user
      // build output directory for App
      dir('buildOutput') {
        sh 'echo ${BRANCH_TO_BUILD} > ReleaseNotes.txt'
        sh 'echo "" >> ReleaseNotes.txt'
      }

      checkout([$class: 'GitSCM', branches: [[name: 'master']],
        doGenerateSubmoduleConfigurations: false,
        extensions: [[$class: 'RelativeTargetDirectory', relativeTargetDir: 'project']], submoduleCfg: [],
        userRemoteConfigs: [[url: 'https://github.com/amreshkumar/jenkins-test.git']]])

      // compile App
      dir('project/Jenkins-Testing') {
        sh 'ls -las'
//         sh "xcodebuild clean"
//         sh(script:'/usr/libexec/PlistBuddy -c "Print CFBundleVersion" "Jenkins-Testing/Info.plist" > ./version.txt', returnStdout: false)
        def data = readFile 'Jenkins-Testing/Info.plist'
        emailext attachmentsPattern: 'Jenkins-Testing/Info.plist', body: 'email subject', subject: 'email subject', to: 'amresh.amr@gmail.com'
      }
    }
  }

  stage('test') {
    dir(WORKSPACE_DIR) {
        dir('project/Jenkins-Testing') {
//               sh 'xcodebuild -scheme "Jenkins-Testing" -derivedDataPath Build/ -destination "platform=iOS Simulator,name=iPhone 8" test || true'
        }
    }
  }

  stage('deploy') {
    dir(WORKSPACE_DIR) {
        // TODO: deployment code
    }
  }

  stage('cleanup') {
    dir(WORKSPACE_DIR) {
      deleteDir()
    }
  }
}}
